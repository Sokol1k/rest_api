#6: REST API

1. В Api должны быть CRUD методы для управления и просмотра данными. У список данных должна быть возможность сортировки и поиска данных. В методе который возвращает список бизнесов надо возвращать только базовые пол, а в методах просмотра конкретного бизнеса - все поля.

* Для описания общей структуры ответов надо использовать Laravel API Resource или любой другой composer пакет, например https://github.com/dingo/api.

2. Доступ к методам Api необходимо разделить по ролям. То есть должно быть 2 роли:
   - admin - этой ролью может обладать только заранее созданный пользователь. Создать через API пользователя с этой ролью нельзя. Этот пользователь может просматривать\создавать\удалять\редактировать все данные про бизнесы. Также этот пользователь может подтверждать регистрацию новых пользователей.
   - user - это базовая роль пользователей. Она присваивается всем пользователям которые зарегистрировались через API. Для получения доступа к методам API user должен быть проапрувлен любым админом. После подтверждения регистрации user может просматривать все бизнесы которые есть в системе. Также user может создавать новые бизнесы. Редактировать и удалять user может только те бизнесы которые он создал сам. Один user может просматривать бизнесы которые создал другой user, но не может их удалять или редактировать.

* Для разделения ролей надо использовать любой composer пакет для Laravel, который реализует работу с ролями пользователей

3. После того как админ подтвердил регистрацию юзера, юзер должен получить на почту письмо с текстом что его акаунт подтвержден. В письме должен быть текст "Your account has been confirmed" и кнопка "Login", по клику на который пользователь перейдет на домен вашей API.

* Для письма надо создать отдельный шаблон и нужную разметку сделать используя markdown template
* Сами письма должны отправляться в queue

4. Надо сделать метод который будет возвращать количество созданных по дням бизнесов. Пользователь видит свои бизнесы, админ видит все, но может фильтровать по юзерам.

Во время написания задания необходимо придерживаться всех лучших практик написания кода - PSR, https://github.com/alexeymezenin/laravel-best-practices и брать за основу код Laravel. Если где-то возникает спорный момент то сначала смотрим как подобные вещи реализованы в самом Laravel, если не нашли в нем - смотрим в статью, если и там не нашли то смотрим в стандарты PSR.
